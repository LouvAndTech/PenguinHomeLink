name: Release Build

on:
  push:
    tags:
      - 'v*.*'

permissions:
  contents: write

env:
  URL: "${{ github.server_url }}/${{ github.repository }}"
  MAINTAINER: "Elouan LÃ©rissel" # Used in the Makefile
  DESCRIPTION: "PenguinHomeLink - A service to update your HomeAssistant with your server status"

jobs:
  build:
    name: Build Binaries and Packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v3

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go (or appropriate toolchain)
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Set up environment variables
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "TARGET_ENV=${{ matrix.os }}" >> $GITHUB_ENV
          echo "TARGET_ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "URL=${{ github.server_url }}/${{ github.repository }}" >> $GITHUB_ENV

      - name: Build binary
        run: make

      - name: Rename artifact
        run: |
          if [[ "${{ matrix.os }}" == "windows" ]]; then
            mv bin/penguinhomelink_${{ matrix.os }}_${{ matrix.arch }} bin/penguinhomelink_${{ matrix.os }}_${{ matrix.arch }}.exe
          fi

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}-${{ matrix.arch }}
          path: bin/*
          if-no-files-found: ignore
          retention-days: 1

  deb-packaging:
    name: Build Debian Packages
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Set up environment
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "TARGET_ENV=linux" >> $GITHUB_ENV
          echo "TARGET_ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "URL=${{ github.server_url }}/${{ github.repository }}" >> $GITHUB_ENV

      - name: Download Linux binaries
        uses: actions/download-artifact@v4
        with:
          name: binary-linux-${{ matrix.arch }}
          path: bin

      - name: Build Debian package
        run: make deb

      - name: Rename .deb artifact
        run: |
          mkdir -p dist
          mv dist/*.deb dist/penguinhomelink_${{ matrix.arch }}.deb

      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: deb-package-${{ matrix.arch }}
          path: dist/*.deb
          if-no-files-found: ignore
          retention-days: 1

  release:
    name: Create Draft Release
    needs: [build, deb-packaging]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          path: bin

      - name: Download Debian packages
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create draft release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          draft: true
          files: |
            bin/binary-linux-amd64/*
            bin/binary-linux-arm64/*
            bin/binary-windows-amd64/*
            bin/binary-windows-arm64/*
            bin/binary-darwin-amd64/*
            bin/binary-darwin-arm64/*
            dist/deb-package-amd64/*
            dist/deb-package-arm64/*
